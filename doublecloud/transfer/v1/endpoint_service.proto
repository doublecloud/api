syntax = "proto3";

package doublecloud.transfer.v1;

option go_package = "github.com/doublecloud/go-genproto/doublecloud/transfer/v1;transfer";

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "doublecloud/transfer/v1/endpoint.proto";
import "doublecloud/v1/operation.proto";
import "doublecloud/v1/paging.proto";

service EndpointService {
    rpc Get(GetEndpointRequest) returns (Endpoint) {
        option (google.api.http) = { get: "/v1/endpoint/{endpoint_id}" };
    }
    rpc List(ListEndpointsRequest) returns (ListEndpointsResponse) {
        option (google.api.http) = { get: "/v1/endpoints/list/{project_id}" };
    }
    rpc Create(CreateEndpointRequest) returns (doublecloud.v1.Operation) {
        option (google.api.http) = { post: "/v1/endpoint" body: "*" };
    }
    rpc Update(UpdateEndpointRequest) returns (doublecloud.v1.Operation) {
        option (google.api.http) = { patch: "/v1/endpoint/{endpoint_id}" body: "*" };
    }
    rpc Delete(DeleteEndpointRequest) returns (doublecloud.v1.Operation) {
        option (google.api.http) = { delete: "/v1/endpoint/{endpoint_id}" };
    }
}
message GetEndpointRequest {
    string endpoint_id = 1;
}
message ListEndpointsRequest {
    // Identifier of the folder containing the endpoints to be listed.
    string project_id = 1;
    // The maximum number of endpoints to be sent in the response message. If the
    // folder contains more endpoints than `page_size`, `next_page_token` will be
    // included
    // in the response message. Include it into the subsequent `ListEndpointRequest` to
    // fetch the next page. Defaults to `100` if not specified. The maximum allowed
    // value
    // for this field is `500`.
    doublecloud.v1.Paging page = 2;
}
message ListEndpointsResponse {
    // The list of endpoints. If there are more endpoints in the folder, then
    // `next_page_token` is a non-empty string to be included into the subsequent
    // `ListEndpointsRequest` to fetch the next endpoints page.
    repeated Endpoint endpoints = 1;
    // Opaque value identifying the next endpoints page. This field is empty if there
    // are no more endpoints in the folder. Otherwise, it is non-empty and should be
    // included in the subsequent `ListEndpointsRequest` to fetch the next endpoints
    // page.
    doublecloud.v1.NextPage next_page = 2;
}
message CreateEndpointRequest {
    reserved 5 to 51;
    string project_id = 1;
    string name = 2;
    string description = 3;
    map<string,string> labels = 4;
    EndpointSettings settings = 52;
}
message UpdateEndpointRequest {
    reserved 1 to 9, 14 to 51;
    // Identifier of the endpoint to be updated.
    string endpoint_id = 10;
    // The new endpoint name. Must be unique within the folder.
    string name = 11;
    // The new description for the endpoint.
    string description = 12;
    map<string,string> labels = 13;
    // The new endpoint name. Must be unique within the folder.
    EndpointSettings settings = 52;
}
message DeleteEndpointRequest {
    string endpoint_id = 1;
}
