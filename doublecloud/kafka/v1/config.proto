syntax = "proto3";

package doublecloud.kafka.v1;

option go_package = "github.com/doublecloud/go-genproto/doublecloud/kafka/v1;kafka";

import "google/protobuf/wrappers.proto";

// Configuration for Apache KafkaÂ® brokers in the cluster.
message KafkaConfig {
    // The largest record batch size allowed by Kafka. Default value: 1048588.
    google.protobuf.Int64Value message_max_bytes = 1;
    // The number of bytes of messages to attempt to fetch for each partition. Default
    // value: 1048576.
    google.protobuf.Int64Value replica_fetch_max_bytes = 2;
    // The maximum size of the log before deleting it. Default is -1.
    google.protobuf.Int64Value log_retention_bytes = 3;
    // The number of hours to keep a log file before deleting it (in hours), tertiary
    // to log.retention.ms property. Default: 168 hours.
    google.protobuf.Int64Value log_retention_hours = 4;
    // The number of minutes to keep a log file before deleting it (in minutes),
    // secondary to log.retention.ms property. If not set, the value in
    // log.retention.hours is used.
    google.protobuf.Int64Value log_retention_minutes = 5;
    // The number of milliseconds to keep a log file before deleting it (in
    // milliseconds), If not set, the value in log.retention.minutes is used. If set to
    // -1, no time limit is applied.
    google.protobuf.Int64Value log_retention_ms = 6;
}
// Configuration for Schema Registry.
message SchemaRegistryConfig {
    // Is Schema Registry enabled for this cluster.
    bool enabled = 1;
}
// Configuration for REST API.
message RestAPIConfig {
    // Is REST API enabled for this cluster.
    bool enabled = 1;
}
